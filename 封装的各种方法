// 封装弹框的方法
uni.$showMsg() 

见过的api
 uni.setTabBarBadge() // 徽标
 uni.getStystemlnfoSync() // 获取系统信息同步接口
 uni.setStorageSync() // 数据持久化 存
 uni.getStorageSync() // 数据持久化 取
 uni.chooseAddress() // 收货地址的功能
 
/*uni-app 的api 
 获取系统信息同步接口, 参考官网api文档
 uni.getStystemlnfoSync() 
 
 选择收货地址的功能
 uni.chooseAddress()
 // 调用uni.chooseAddress() 前先在 manifest.json 文件下 "mp-weixin" : {
   "requiredPrivateInfos": [     
     //"getFuzzyLocation",
     //"choosePoi",
     "chooseAddress"]
     }
*/

// 封装自定义导航栏组件
// 封装click事件 $emit('click')
// 封装商品item项组件

// 吸顶效果
.search-box {
  // 设置定位效果为 吸顶
  position: sticky;
  // 吸顶的位置
  top: 0;
  // 提高层级
  z-index: 999;
}

// 输入框防抖技术 原理 延时器

// 超出文本用三小圆点
.goods-name {
  // 文字不允许换行（单行文本）
  white-space: nowrap;
  // 溢出部分隐藏
  overflow: hidden;
  // 文本溢出后，使用 ... 代替
  text-overflow: ellipsis;
  margin-right: 3px; 
  }
  
 // 要求：不要有重复历史记录， 最新的排在最前面
  const index = this.historyList.indexOf(this.kw)
  if (index !== -1) {
    this.historyList.splice(index, 1)
  }
  this.historyList.unshift(this.kw)
  
  
  // 数据持久化 调用 uni.setStorageSync(key, value) 将搜索历史记录持久化存储到本地
  // 存储
  uni.setStorageSync('KW',JSON.stringify(this.historyList)) 
  // 读取
  this.historyList = JSON.parse(uni.getStorageSync('KW') || '[]')
  
  
 // 过滤器节点
 filters: {
  // 把数字处理为带两位小数点的数字
   tofixed(num) {
    return Number(num).toFixed(2)
   }
 }
 <view class="goods-price">￥{{goods.goods_price | tofixed}}</view>
 
 调用 uni.setTabBarBadge() 方法，为购物车设置右上角的徽标
 uni.setTabBarBadge({
   index: 2, // 索引
   text: this.total + '' // 注意：text 的值必须是字符串，不能是数字
 })
 
 mixins 混入
 
 
 面试题:
 将对象转换成字符串，再判断是否等于“{}”
 let obj={};
 console.log(JSON.stringify(obj)==="{}");
 //返回true
 
 
 vuex: 辅助函数
 import { mapState, mapMutations, mapGetters } from 'vuex'
 methods: {
   ...mapMutations()
 },
 computed: {
   ...mapState()
   ...mapGetters()
 }
 
 // 调用同级下来方法
 this.commit('m_user/saveAddressToStorage')
 mutations: {
 updateAddress() { this.commit('m_user/saveAddressToStorage') },
 saveAddressToStorage() {}
 }
 
 